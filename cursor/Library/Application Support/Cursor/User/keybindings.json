[
    // ===== Notebook/Jupyter Related =====
    {
        "key": "cmd+enter",
        "command": "notebook.cell.executeAndFocusContainer",
        "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "key": "shift+m",
        "command": "notebook.cell.joinSelected",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+n cmd+r",
        "command": "jupyter.restartkernel",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "cmd+n cmd+a",
        "command": "notebook.cell.executeCellsAbove",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "cmd+n cmd+b",
        "command": "notebook.cell.executeCellAndBelow",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "cmd+n cmd+enter",
        "command": "jupyter.runallcells"
    },
    {
        "key": "cmd+n cmd+c",
        "command": "notebook.cellOutput.copy"
    },
    {
        "key": "cmd+n cmd+i",
        "command": "notebook.interruptExecution"
    },
    {
        "key": "cmd+n cmd+h",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "cmd+n cmd+h",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "shift+j",
        "command": "list.expandSelectionDown",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused && notebookCellListFocused"
    },
    {
        "key": "shift+k",
        "command": "list.expandSelectionUp",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused && notebookCellListFocused"
    },
    // ===== Terminal Related =====
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+shift+`",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "shift+enter",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\\\r\n"
        },
        "when": "terminalFocus"
    },
    {
        "key": "ctrl a x",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a c",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a p",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a 1",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a 2",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a 3",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a 4",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "terminalFocus && vim_mode != insert"
    },
    {
        "key": "ctrl a 5",
        "command": "workbench.action.terminal.focusAtIndex5",
        "when": "terminalFocus && vim_mode != insert"
    },
    // ===== Language Specific Run Commands =====
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "imandrax-cli repl -d -l ${file}\u000D"
        },
        "when": "resourceExtname == .iml && editorTextFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd ${workspaceFolder} && stack runghc ${relativeFile}\n"
        },
        "when": "editorLangId == 'haskell'"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd ${workspaceFolder} && lua ${relativeFile}\n"
        },
        "when": "editorLangId == 'lua'"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd ${workspaceFolder} && cargo insta test --lib -- ${fileBasenameNoExtension}\n"
        },
        "when": "editorlangid == 'rust' || resourceExtname == .rs"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd ${workspaceFolder} && cargo insta test --review --lib -- ${fileBasenameNoExtension}\n"
        },
        "when": "editorlangid == 'rust' || resourceExtname == .rs"
    },
    {
        "key": "ctrl+shift+n",
        "command": "multiCommand.runPytestAndFocusTerminal",
        // "command": "workbench.action.terminal.sendSequence",
        // "args": {
        //     "text": "cd ${workspaceFolder} && uv run pytest ${file}\n"
        // },
        "when": "resourceExtname == .py"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cd ${workspaceFolder} && uv run pytest ${file} --inline-snapshot=fix\n"
        },
        // "command": "workbench.action.terminal.sendSequence",
        // "args": {
        //     "text": "cd ${workspaceFolder} && uv run pytest ${file}\n"
        // },
        "when": "resourceExtname == .py"
    },
    // ===== LazyVim =====
    // Use space-e to toggle project panel
    {
        "key": "space e",
        "command": "workbench.view.explorer",
        "when": "vim.mode == 'Normal' && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && vim.mode != 'Insert' && !inputFocus && !inQuickOpen && !terminalFocus"
    },
    // File Explorer operations
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.select",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "shift+y",
        "command": "copyFilePath",
        "when": "explorerViewletFocus && !inputFocus"
    },
    // Save file
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    // ===== LSP ======
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        // "when": "editorTextFocus && vim.mode != 'Insert'"
        "when": "!listFocus && notebookEditorFocused && !notebookCellEditorFocused || editorTextFocus && vim.mode != 'Insert' && vim.mode != 'SearchInProgressMode' && !cursorAtInlineEdit"
    },
    // Buffer/Tab navigation with shift + hjkl
    {
        "key": "shift+h",
        "command": "workbench.action.previousEditor",
        "when": "notebookEditorFocused && !notebookCellEditorFocused || editorTextFocus && vim.mode != 'Insert' && vim.mode != 'SearchInProgressMode' && !cursorAtInlineEdit"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.nextEditor",
        "when": "notebookEditorFocused && !notebookCellEditorFocused || editorTextFocus && vim.mode != 'Insert' && vim.mode != 'SearchInProgressMode' && !cursorAtInlineEdit"
    },
    // {
    //     "key": "shift+j",
    //     "command": "workbench.action.focusBelowGroup",
    //     "when": "vim.mode != 'Insert'"
    // },
    // {
    //     "key": "shift+k",
    //     "command": "workbench.action.focusAboveGroup",
    //     "when": "vim.mode != 'Insert'"
    // },
    // Pane navigation with ctrl + hjkl
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup",
        "when": "vim.mode != 'Insert'"
    },
    // File finder with space space
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    // Window splits
    {
        "key": "space shift+\\",
        "command": "workbench.action.splitEditorRight",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space -",
        "command": "workbench.action.splitEditorDown",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    // Comments
    // {
    //     "key": "g c c",
    //     "command": "editor.action.commentLine",
    //     "when": "vim.mode != 'Insert'"
    // },
    // Diagnostic navigation
    // {
    //     "key": "[ q",
    //     "command": "editor.action.marker.nextInFiles",
    //     "when": "vim.mode != 'Insert'"
    // },
    // {
    //     "key": "] q",
    //     "command": "editor.action.marker.nextInFiles",
    //     "when": "vim.mode != 'Insert'"
    // },
    // Buffer management with space + b
    {
        "key": "space b b",
        "command": "workbench.action.openPreviousRecentlyUsedEditor",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space b d",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space b o",
        "command": "workbench.action.closeOtherEditors",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space b p",
        "command": "workbench.action.pinEditor",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    // Search related
    {
        "key": "space s s",
        "command": "workbench.action.quickOpen",
        "args": "@",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    // Code actions with space + c
    {
        "key": "space c f",
        "command": "editor.action.formatDocument",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    {
        "key": "space c a",
        "command": "editor.action.quickFix",
        "when": "vim.mode == 'Normal' && editorFocus && !inQuickOpen && !terminalFocus"
    },
    // ===== Editor Actions =====
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !editorTabMovesFocus && !inlineSuggestionHasIndentationLessThanTabSize && !inlineSuggestionVisible && editorHoverFocused && editorTabMovesFocus && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorTextFocus && !editorTabMovesFocus"
    },
    // ===== AI/Composer Related =====
    {
        "key": "cmd+k",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "composerMode.agent"
    },
    // ===== UI Controls =====
    {
        "key": "cmd+h",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+i",
        "command": "-composer.newAgentChat"
    },
    {
        "key": "shift+cmd+i",
        "command": "claude-code.runClaude.keyboard",
        "when": "claude-code.hasClaudeInPath"
    },
    {
        "key": "cmd+escape",
        "command": "-claude-code.runClaude.keyboard",
        "when": "claude-code.hasClaudeInPath"
    },
    {
        "key": "cmd+enter",
        "command": "-repl.execute",
        "when": "isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'"
    },
    {
        "key": "cmd+e",
        "command": "composerMode.background"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "cmd+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
    }
]